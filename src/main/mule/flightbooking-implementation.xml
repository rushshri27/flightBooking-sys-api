<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<flow name="getFlights" doc:id="eaf1b501-a8bc-43e1-a9d9-c9d10d7516d8" >
		<logger level="INFO" doc:name="Start getFlight process" doc:id="20bbe435-ca05-49b1-8039-be27024af042" message='#["getFlight Flow Start " ++ now() as String]' />
		<choice doc:name="Choice" doc:id="f5c9a0c0-d725-4fb3-b8a2-fc7e1681999f" >
			<when expression='#[attributes.queryParams.departureDate as Date {format:"yyyy-MM-dd"}==(now() as Date{format:"yyyy-MM-dd"})]'>
				<db:select doc:name="Todays Flights" doc:id="1c049d5f-5bdd-4ece-b39d-1aec110b0a69" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT f.flightId,f.airlineName,f.departureTime,f.arrivalTime,f.fare,f.sourceName,f.destination,f.totalSeats,IFNULL(fb.departureDate,:departureDate) as departureDate,IFNULL(f.totalSeats-SUM(fb.seatsBooked),f.totalSeats) AS seatsAvailable FROM Flights f LEFT OUTER JOIN FlightBooking fb ON f.flightId = fb.flightId AND fb.departureDate =:departureDate WHERE f.sourceName=:source and STR_TO_DATE(f.departureTime,'%H:%i:%s')>:currentTime and f.destination =:destination GROUP BY (f.flightId)]]></db:sql>
			<db:input-parameters><![CDATA[#[{'source':attributes.queryParams.source,'destination':attributes.queryParams.destination,
'departureDate':attributes.queryParams.departureDate,'currentTime':now() as String{format:"HH:mm:ss"}}]]]></db:input-parameters>
		</db:select>
			</when>
			<otherwise >
				<db:select doc:name="Future Flights" doc:id="2ab8e1e5-929b-42e9-af31-57fe033e4e2b" config-ref="Database_Config" >
					<db:sql ><![CDATA[SELECT f.flightId,f.airlineName,f.departureTime,f.arrivalTime,f.fare,f.sourceName,f.destination,f.totalSeats,IFNULL(fb.departureDate,:departureDate) as departureDate,IFNULL(f.totalSeats-SUM(fb.seatsBooked),f.totalSeats) AS seatsAvailable FROM Flights f LEFT OUTER JOIN FlightBooking fb ON f.flightId = fb.flightId AND fb.departureDate =:departureDate WHERE f.sourceName=:source and f.destination =:destination GROUP BY (f.flightId)]]></db:sql>
					<db:input-parameters ><![CDATA[#[{'source':attributes.queryParams.source,'destination':attributes.queryParams.destination,
	'departureDate':attributes.queryParams.departureDate
}]]]></db:input-parameters>
				</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transforming Output to require format" doc:id="3b1e1b9b-be2e-4250-913d-c1836fe5176a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	departureTime: payload01.departureTime,
	farePerSeat: payload01.fare,
	arrivalTime: payload01.arrivalTime,
	totalSeats: payload01.totalSeats,
	destination: payload01.destination,
	flightId: payload01.flightId,
	source: payload01.sourceName,
	departureDate: payload01.departureDate,
	airlineName: payload01.airlineName,
	seatsAvailable: payload01.seatsAvailable,
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="End getFlight process" doc:id="186e1a9c-4ae0-4313-9632-be852723410b" message='#["getFlight Flow End " ++ now() as String]'/>
	</flow>
	<flow name="bookFlight" doc:id="6acaede3-6b03-4bb5-888e-b279b8a4e980" >
		<logger level="INFO" doc:name="Start bookFlight process" doc:id="54d76c87-648e-4d4d-851a-017f005eb65d" message='#["bookFlight Flow Start " ++ now() as String]' />
		<db:insert doc:name="Book Flight" doc:id="0a6f56e7-9209-4f4a-b052-04fec7ce6bf8" config-ref="Database_Config" target="inputData" autoGenerateKeys="true" autoGeneratedKeysColumnNames="#[['bookingId']]">
			<db:sql ><![CDATA[INSERT INTO FlightBooking(flightId,departureDate,passengerNames,mobileNumber,seatsBooked,createdTime) values(:flightId,:departureDate,:passengerNames,:mobileNumber,:seatsBooked,CURRENT_TIMESTAMP)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'flightId':payload.flightId,
	'departureDate':payload.departureDate,
	'passengerNames':payload.passengerNames as Array<String> joinBy ",",
	'mobileNumber':payload.mobileNumber,
	'seatsBooked':payload.numberOfAdults as Number + payload.numberOfChilds as Number 
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="JAVA To JSON" doc:id="63ce327f-eaa2-4e6e-be55-8fe903083635" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Flight Booked Successfully!!!",
	bookingId: vars.inputData.generatedKeys.GENERATED_KEY,
	passengerNames: payload.passengerNames map ( passangerName , indexOfPassangerName ) -> passangerName,
	departureDate: payload.departureDate,
	departureTime: payload.departureTime
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="201" doc:name="HTTP Status" doc:id="fbe740bc-a4a0-4888-9798-4bc4deae9b87" variableName="httpStatus"/>
		<logger level="INFO" doc:name="End bookFlight process" doc:id="be7d26b3-fd3e-48ea-89b9-58c6295bfe73" message='#["bbokFlight Flow End " ++ now() as String]' />
	</flow>
	<flow name="cancelFlight" doc:id="917a09a7-dbcf-4f09-b4f6-7d24a72fe445" >
		<logger level="INFO" doc:name="Start cancelFlight process" doc:id="fd844a10-6968-4fe1-ae44-bf6a3c5b188d" message='#["cancelFlight Flow Start " ++ now() as String]' />
		<db:delete doc:name="Cancel Booked Flight" doc:id="4b404f17-b62f-4c4c-a51e-30f277c9c817" config-ref="Database_Config">
			<db:sql ><![CDATA[Delete from FlightBooking where bookingId =:bookingId]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'bookingId':attributes.uriParams.bookingId
}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="ba70a736-ac58-47a0-a1fe-f4e22c7b9d1e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message":"Booking cancellation done successfully!!!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="End cancelFlight process" doc:id="34c4021a-ffb4-4af1-ab89-ee1a48034107" message='#["cancelFlight Flow Start " ++ now() as String]' />
	</flow>
	<flow name="fetchBookedFlightDetails" doc:id="5b571eee-8512-41ab-91db-7e7139abb019" >
		<logger level="INFO" doc:name="Start fetchBookedFlight Flow" doc:id="15769152-fb17-4e09-8608-55b38e138296" message='#["fetchBookedFlight  Flow Start " ++ now() as String]' />
		<db:select doc:name="Fetch Booked flight details" doc:id="79903703-e2a2-4745-bd85-c90e2a330561" config-ref="Database_Config">
			<db:sql ><![CDATA[select fb.flightId,fb.bookingId,f.airlineName,f.departureTime,f.arrivalTime,fb.departureDate,f.fare as farePerSeat,
fb.seatsBooked from FlightBooking fb inner join Flights f on fb.flightId = f.flightId where fb.bookingId =:bookingId and fb.departureDate =:departureDate]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	'bookingId':payload.bookingId,
	'departureDate':payload.departureDate
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="JAVA TO JSON" doc:id="dc2734d0-1e93-4dfa-8165-a44c3a241be3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	flightId: payload01.flightId,
	bookingId: payload01.bookingId,
	airlineName: payload01.airlineName,
	departureDate:payload01.departureDate as Date{format:"yyyy-MM-dd"},
	departureTime: payload01.departureTime,
	arrivalTime: payload01.arrivalTime,
	seatsBooked: payload01.seatsBooked,
	farePerSeat: payload01.farePerSeat
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="End fetchBookedFlight  flow" doc:id="80378e2b-7aa0-4631-987f-1b44498a2ef5" message='#["fetchBookedFlight  Flow End " ++ now() as String]'/>
	</flow>
</mule>
